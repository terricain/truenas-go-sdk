/*
TrueNAS RESTful API

Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// CreateISCSITargetParamsGroupsInner struct for CreateISCSITargetParamsGroupsInner
type CreateISCSITargetParamsGroupsInner struct {
	Portal int32 `json:"portal"`
	Initiator *int32 `json:"initiator,omitempty"`
	Authmethod string `json:"authmethod"`
	Auth map[string]interface{} `json:"auth,omitempty"`
}

// NewCreateISCSITargetParamsGroupsInner instantiates a new CreateISCSITargetParamsGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateISCSITargetParamsGroupsInner(portal int32, authmethod string) *CreateISCSITargetParamsGroupsInner {
	this := CreateISCSITargetParamsGroupsInner{}
	this.Portal = portal
	this.Authmethod = authmethod
	return &this
}

// NewCreateISCSITargetParamsGroupsInnerWithDefaults instantiates a new CreateISCSITargetParamsGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateISCSITargetParamsGroupsInnerWithDefaults() *CreateISCSITargetParamsGroupsInner {
	this := CreateISCSITargetParamsGroupsInner{}
	var authmethod string = "NONE"
	this.Authmethod = authmethod
	return &this
}

// GetPortal returns the Portal field value
func (o *CreateISCSITargetParamsGroupsInner) GetPortal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Portal
}

// GetPortalOk returns a tuple with the Portal field value
// and a boolean to check if the value has been set.
func (o *CreateISCSITargetParamsGroupsInner) GetPortalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Portal, true
}

// SetPortal sets field value
func (o *CreateISCSITargetParamsGroupsInner) SetPortal(v int32) {
	o.Portal = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *CreateISCSITargetParamsGroupsInner) GetInitiator() int32 {
	if o == nil || o.Initiator == nil {
		var ret int32
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateISCSITargetParamsGroupsInner) GetInitiatorOk() (*int32, bool) {
	if o == nil || o.Initiator == nil {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *CreateISCSITargetParamsGroupsInner) HasInitiator() bool {
	if o != nil && o.Initiator != nil {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given int32 and assigns it to the Initiator field.
func (o *CreateISCSITargetParamsGroupsInner) SetInitiator(v int32) {
	o.Initiator = &v
}

// GetAuthmethod returns the Authmethod field value
func (o *CreateISCSITargetParamsGroupsInner) GetAuthmethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authmethod
}

// GetAuthmethodOk returns a tuple with the Authmethod field value
// and a boolean to check if the value has been set.
func (o *CreateISCSITargetParamsGroupsInner) GetAuthmethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authmethod, true
}

// SetAuthmethod sets field value
func (o *CreateISCSITargetParamsGroupsInner) SetAuthmethod(v string) {
	o.Authmethod = v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *CreateISCSITargetParamsGroupsInner) GetAuth() map[string]interface{} {
	if o == nil || o.Auth == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateISCSITargetParamsGroupsInner) GetAuthOk() (map[string]interface{}, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *CreateISCSITargetParamsGroupsInner) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given map[string]interface{} and assigns it to the Auth field.
func (o *CreateISCSITargetParamsGroupsInner) SetAuth(v map[string]interface{}) {
	o.Auth = v
}

func (o CreateISCSITargetParamsGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["portal"] = o.Portal
	}
	if o.Initiator != nil {
		toSerialize["initiator"] = o.Initiator
	}
	if true {
		toSerialize["authmethod"] = o.Authmethod
	}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	return json.Marshal(toSerialize)
}

type NullableCreateISCSITargetParamsGroupsInner struct {
	value *CreateISCSITargetParamsGroupsInner
	isSet bool
}

func (v NullableCreateISCSITargetParamsGroupsInner) Get() *CreateISCSITargetParamsGroupsInner {
	return v.value
}

func (v *NullableCreateISCSITargetParamsGroupsInner) Set(val *CreateISCSITargetParamsGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateISCSITargetParamsGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateISCSITargetParamsGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateISCSITargetParamsGroupsInner(val *CreateISCSITargetParamsGroupsInner) *NullableCreateISCSITargetParamsGroupsInner {
	return &NullableCreateISCSITargetParamsGroupsInner{value: val, isSet: true}
}

func (v NullableCreateISCSITargetParamsGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateISCSITargetParamsGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


