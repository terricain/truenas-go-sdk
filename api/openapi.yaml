openapi: 3.0.0
info:
  description: Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator
    https://github.com/openapitools/openapi-generator)
  title: TrueNAS RESTful API
  version: v2.0
servers:
- url: /
paths:
  /pool:
    get:
      operationId: listPools
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
          description: A list of pools
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - pool
  /pool/dataset:
    get:
      operationId: listDatasets
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetResponse'
          description: A list of datasets
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    post:
      description: "Creates a dataset/zvol.\n\n`volsize` is required for type=VOLUME\
        \ and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize`\
        \ are only used for type=VOLUME.\n\n`encryption` when enabled will create\
        \ an ZFS encrypted root dataset for `name` pool.\nThere are 2 cases where\
        \ ZFS encryption is not allowed for a dataset:\n1) Pool in question is GELI\
        \ encrypted.\n2) If the parent dataset is encrypted with a passphrase and\
        \ `name` is being created\n  with a key for encrypting the dataset.\n\n`encryption_options`\
        \ specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase`\
        \ must be specified if encryption for dataset is desired with a passphrase\n\
        as a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n\
        `encryption_options.generate_key` when enabled automatically generates the\
        \ key to be used\nfor dataset encryption.\n\nIt should be noted that keys\
        \ are stored by the system for automatic locking/unlocking\non import/export\
        \ of encrypted datasets. If that is not desired, dataset should be created\n\
        with a passphrase as a key.\n"
      operationId: createDataset
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
  /pool/dataset/id/{id}:
    delete:
      description: |
        Delete dataset/zvol

        `recursive` will also delete/destroy all children datasets.
        `force` will force delete busy datasets.
      operationId: deleteDataset
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    get:
      description: "Query Pool Datasets with `query-filters` and `query-options`.\n\
        \nWe provide two ways to retrieve datasets. The first is a flat structure\
        \ (default), where\nall datasets in the system are returned as separate objects\
        \ which contain all data\nthere is for their children. This retrieval type\
        \ is slightly slower because of duplicates in each object.\nThe second type\
        \ is hierarchical, where only top level datasets are returned in the list.\
        \ They contain all the\nchildren in the `children` key. This retrieval type\
        \ is slightly faster.\nThese options are controlled by the `query-options.extra.flat`\
        \ attribute (default true)."
      operationId: getDataset
      parameters:
      - description: ID of the dataset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    put:
      description: Update dataset
      operationId: updateDataset
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
  /cronjob/id/{id}:
    delete:
      operationId: deleteCronJob
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
    get:
      operationId: getCronJob
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
    put:
      description: Update cronjob
      operationId: updateCronJob
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
  /cronjob:
    post:
      description: "Create a new cron job.\n`stderr` and `stdout` are boolean values\
        \ which if `true`, represent that we would like to suppress standard error\
        \ / standard output respectively."
      operationId: createCronJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
  /network/configuration:
    get:
      operationId: getNetworkConfiguration
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfig'
          description: General network configuration
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - network
  /network/general/summary:
    get:
      operationId: getNetworkSummary
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSummary'
          description: General network summary
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - network
  /service/id/{id}:
    get:
      operationId: getService
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Service details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - service
  /sharing/nfs:
    get:
      description: Get a list of NFS shares
      operationId: listSharesNFS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesNFSResponse'
          description: List of NFS shares
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    post:
      description: "Create a new NFS Share.\n\n`paths` is a list of valid paths which\
        \ are configured to be shared on this share.\n\n`networks` is a list of authorized\
        \ networks that are allowed to access the share having format\n\"network/mask\"\
        \ CIDR notation. If empty, all networks are allowed.\n\n`hosts` is a list\
        \ of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames\
        \ are\nallowed.\n\n`alldirs` is a boolean value which when set indicates that\
        \ the client can mount any subdirectories of the\nselected pool or dataset."
      operationId: createShareNFS
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareNFSParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/nfs/id/{id}:
    delete:
      description: Delete NFS Share of `id`.
      operationId: removeShareNFS
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    get:
      description: Get NFS Share of `id`.
      operationId: getShareNFS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    put:
      description: Update NFS Share of `id`.
      operationId: updateShareNFS
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareNFSParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/smb:
    get:
      description: Get a list of SMB shares
      operationId: listSharesSMB
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesSMBResponse'
          description: List of SMB shares
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    post:
      description: "Create an SMB Share.\n\n`purpose` applies common configuration\
        \ presets depending on intended purpose.\n\n`timemachine` when set, enables\
        \ Time Machine backups for this share.\n\n`ro` when enabled, prohibits write\
        \ access to the share.\n\n`guestok` when enabled, allows access to this share\
        \ without a password.\n\n`hostsallow` is a list of hostnames / IP addresses\
        \ which have access to this share.\n\n`hostsdeny` is a list of hostnames /\
        \ IP addresses which are not allowed access to this share. If a handful\n\
        of hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\"\
        \ which means that it will deny\naccess to ALL hostnames except for the ones\
        \ which have been listed in `hostsallow`.\n\n`acl` enables support for storing\
        \ the SMB Security Descriptor as a Filesystem ACL.\n\n`streams` enables support\
        \ for storing alternate datastreams as filesystem extended attributes.\n\n\
        `fsrvp` enables support for the filesystem remote VSS protocol. This allows\
        \ clients to create\nZFS snapshots through RPC.\n\n`shadowcopy` enables support\
        \ for the volume shadow copy service.\n\n`auxsmbconf` is a string of additional\
        \ smb4.conf parameters not covered by the system's API."
      operationId: createShareSMB
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareSMBParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/smb/id/{id}:
    delete:
      description: |-
        Delete SMB Share of `id`. This will forcibly disconnect SMB clients
        that are accessing the share.
      operationId: removeShareSMB
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    get:
      description: Get SMB Share of `id`.
      operationId: getShareSMB
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    put:
      description: Update SMB Share of `id`.
      operationId: updateShareSMB
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareSMBParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /vm:
    get:
      description: Get a list of VMs
      operationId: listVMS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMSResponse'
          description: List of VMs
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
  /vm/id/{id}:
    get:
      description: Get VM details
      operationId: getVM
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: VM details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
components:
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded
  schemas:
    CreateCronjobParams:
      example:
        schedule:
          dom: dom
          hour: hour
          month: month
          dow: dow
          minute: minute
        stdout: true
        description: description
        stderr: true
        user: user
        command: command
        enabled: true
      properties:
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
      required:
      - command
      - user
      type: object
    ListDatasetResponse:
      items:
        $ref: '#/components/schemas/Dataset'
      type: array
    CreateDatasetParams:
      example:
        quota_critical: 1
        recordsize: recordsize
        deduplication: deduplication
        refreservation: 3
        type: type
        volblocksize: volblocksize
        encryption_options:
          generate_key: true
          passphrase: passphrase
          key: key
          algorithm: algorithm
        copies: 0
        encryption: true
        readonly: readonly
        casesensitivity: casesensitivity
        quota: 6
        reservation: 2
        inherit_encryption: true
        force_size: true
        refquota: 2
        atime: atime
        comments: comments
        volsize: 5
        sync: sync
        snapdir: snapdir
        quota_warning: 5
        share_type: share_type
        name: name
        refquota_critical: 7
        aclmode: aclmode
        compression: compression
        refquota_warning: 9
        exec: exec
      properties:
        atime:
          type: string
        aclmode:
          type: string
        name:
          type: string
        comments:
          type: string
        compression:
          type: string
        casesensitivity:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        encryption:
          type: boolean
        encryption_options:
          $ref: '#/components/schemas/CreateDatasetParams_encryption_options'
        exec:
          type: string
        force_size:
          type: boolean
        inherit_encryption:
          type: boolean
        quota:
          format: int64
          type: integer
        quota_critical:
          format: int64
          type: integer
        quota_warning:
          format: int64
          type: integer
        volsize:
          format: int64
          type: integer
        volblocksize:
          type: string
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          format: int64
          type: integer
        refquota_critical:
          format: int64
          type: integer
        refquota_warning:
          format: int64
          type: integer
        refreservation:
          format: int64
          type: integer
        reservation:
          format: int64
          type: integer
        share_type:
          type: string
        snapdir:
          type: string
        sync:
          type: string
        type:
          type: string
      required:
      - name
      type: object
    UpdateDatasetParams:
      example:
        atime: atime
        comments: comments
        volsize: 5
        recordsize: recordsize
        deduplication: deduplication
        refreservation: 5
        sync: sync
        snapdir: snapdir
        copies: 0
        readonly: readonly
        quota: 6
        aclmode: aclmode
        compression: compression
        force_size: true
        refquota: 1
        exec: exec
      properties:
        atime:
          type: string
        aclmode:
          type: string
        comments:
          type: string
        compression:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        exec:
          type: string
        force_size:
          type: boolean
        quota:
          format: int64
          type: integer
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          format: int64
          type: integer
        refreservation:
          format: int64
          type: integer
        volsize:
          format: int64
          type: integer
        snapdir:
          type: string
        sync:
          type: string
      type: object
    CreateShareNFSParams:
      example:
        maproot_group: maproot_group
        hosts:
        - hosts
        - hosts
        networks:
        - networks
        - networks
        maproot_user: maproot_user
        enabled: true
        alldirs: true
        mapall_user: mapall_user
        mapall_group: mapall_group
        security:
        - security
        - security
        paths:
        - paths
        - paths
        comment: comment
        quiet: true
        ro: true
      properties:
        paths:
          items:
            type: string
          type: array
        comment:
          type: string
        networks:
          items:
            type: string
          type: array
        hosts:
          items:
            type: string
          type: array
        alldirs:
          type: boolean
        ro:
          type: boolean
        quiet:
          type: boolean
        maproot_user:
          type: string
        maproot_group:
          type: string
        mapall_user:
          type: string
        mapall_group:
          type: string
        security:
          items:
            type: string
          type: array
        enabled:
          type: boolean
      required:
      - paths
      type: object
    CreateShareSMBParams:
      example:
        auxsmbconf: auxsmbconf
        shadowcopy: true
        purpose: purpose
        abe: true
        hostsdeny:
        - hostsdeny
        - hostsdeny
        path_suffix: path_suffix
        streams: true
        browsable: true
        aapl_name_mangling: true
        acl: true
        fsrvp: true
        enabled: true
        home: true
        durablehandle: true
        path: path
        timemachine: true
        name: name
        comment: comment
        guestok: true
        ro: true
        hostsallow:
        - hostsallow
        - hostsallow
        recyclebin: true
      properties:
        purpose:
          type: string
        path:
          type: string
        path_suffix:
          type: string
        home:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        timemachine:
          type: boolean
        recyclebin:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        shadowcopy:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
      required:
      - path
      type: object
    CompositeValue:
      example:
        rawvalue: rawvalue
        source: source
        value: value
      properties:
        value:
          type: string
        rawvalue:
          type: string
        source:
          type: string
      required:
      - rawvalue
      type: object
    CronJob:
      example:
        schedule:
          dom: dom
          hour: hour
          month: month
          dow: dow
          minute: minute
        stdout: true
        description: description
        id: 0
        stderr: true
        user: user
        command: command
        enabled: true
      properties:
        id:
          type: integer
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
      type: object
    CronJobSchedule:
      example:
        dom: dom
        hour: hour
        month: month
        dow: dow
        minute: minute
      properties:
        minute:
          type: string
        hour:
          type: string
        dom:
          type: string
        month:
          type: string
        dow:
          type: string
      type: object
    Dataset:
      example:
        key_loaded: true
        quota_critical:
          rawvalue: rawvalue
          source: source
          value: value
        origin:
          rawvalue: rawvalue
          source: source
          value: value
        recordsize:
          rawvalue: rawvalue
          source: source
          value: value
        deduplication:
          rawvalue: rawvalue
          source: source
          value: value
        refreservation:
          rawvalue: rawvalue
          source: source
          value: value
        type: type
        volblocksize:
          rawvalue: rawvalue
          source: source
          value: value
        mountpoint: mountpoint
        acltype:
          rawvalue: rawvalue
          source: source
          value: value
        copies:
          rawvalue: rawvalue
          source: source
          value: value
        readonly:
          rawvalue: rawvalue
          source: source
          value: value
        casesensitivity:
          rawvalue: rawvalue
          source: source
          value: value
        quota:
          rawvalue: rawvalue
          source: source
          value: value
        reservation:
          rawvalue: rawvalue
          source: source
          value: value
        id: id
        locked: true
        refquota:
          rawvalue: rawvalue
          source: source
          value: value
        xattr:
          rawvalue: rawvalue
          source: source
          value: value
        atime:
          rawvalue: rawvalue
          source: source
          value: value
        comments:
          rawvalue: rawvalue
          source: source
          value: value
        pbkdf2iters:
          rawvalue: rawvalue
          source: source
          value: value
        volsize:
          rawvalue: rawvalue
          source: source
          value: value
        key_format:
          rawvalue: rawvalue
          source: source
          value: value
        pool: pool
        encryption_root: encryption_root
        sync:
          rawvalue: rawvalue
          source: source
          value: value
        snapdir:
          rawvalue: rawvalue
          source: source
          value: value
        quota_warning:
          rawvalue: rawvalue
          source: source
          value: value
        encrypted: true
        managedby:
          rawvalue: rawvalue
          source: source
          value: value
        name: name
        refquota_critical:
          rawvalue: rawvalue
          source: source
          value: value
        encryption_algorithm:
          rawvalue: rawvalue
          source: source
          value: value
        aclmode:
          rawvalue: rawvalue
          source: source
          value: value
        compression:
          rawvalue: rawvalue
          source: source
          value: value
        refquota_warning:
          rawvalue: rawvalue
          source: source
          value: value
        exec:
          rawvalue: rawvalue
          source: source
          value: value
      properties:
        id:
          type: string
        name:
          type: string
        pool:
          type: string
        type:
          type: string
        mountpoint:
          type: string
        encrypted:
          type: boolean
        encryption_root:
          type: string
        key_loaded:
          type: boolean
        locked:
          type: boolean
        encryption_algorithm:
          $ref: '#/components/schemas/CompositeValue'
        aclmode:
          $ref: '#/components/schemas/CompositeValue'
        acltype:
          $ref: '#/components/schemas/CompositeValue'
        atime:
          $ref: '#/components/schemas/CompositeValue'
        casesensitivity:
          $ref: '#/components/schemas/CompositeValue'
        comments:
          $ref: '#/components/schemas/CompositeValue'
        compression:
          $ref: '#/components/schemas/CompositeValue'
        deduplication:
          $ref: '#/components/schemas/CompositeValue'
        exec:
          $ref: '#/components/schemas/CompositeValue'
        key_format:
          $ref: '#/components/schemas/CompositeValue'
        managedby:
          $ref: '#/components/schemas/CompositeValue'
        copies:
          $ref: '#/components/schemas/CompositeValue'
        quota:
          $ref: '#/components/schemas/CompositeValue'
        quota_critical:
          $ref: '#/components/schemas/CompositeValue'
        quota_warning:
          $ref: '#/components/schemas/CompositeValue'
        reservation:
          $ref: '#/components/schemas/CompositeValue'
        refreservation:
          $ref: '#/components/schemas/CompositeValue'
        refquota:
          $ref: '#/components/schemas/CompositeValue'
        refquota_critical:
          $ref: '#/components/schemas/CompositeValue'
        refquota_warning:
          $ref: '#/components/schemas/CompositeValue'
        readonly:
          $ref: '#/components/schemas/CompositeValue'
        recordsize:
          $ref: '#/components/schemas/CompositeValue'
        sync:
          $ref: '#/components/schemas/CompositeValue'
        snapdir:
          $ref: '#/components/schemas/CompositeValue'
        pbkdf2iters:
          $ref: '#/components/schemas/CompositeValue'
        origin:
          $ref: '#/components/schemas/CompositeValue'
        xattr:
          $ref: '#/components/schemas/CompositeValue'
        volsize:
          $ref: '#/components/schemas/CompositeValue'
        volblocksize:
          $ref: '#/components/schemas/CompositeValue'
      required:
      - id
      - name
      - pool
      - type
      type: object
    NetworkConfig:
      example:
        httpproxy: httpproxy
        service_announcement:
          wsd: true
          netbios: true
          mdns: true
        hosts: hosts
        domains:
        - domains
        - domains
        ipv4gateway: ipv4gateway
        ipv6gateway: ipv6gateway
        hostname: hostname
        nameserver2: nameserver2
        nameserver3: nameserver3
        hostname_local: hostname_local
        netwait_ip:
        - netwait_ip
        - netwait_ip
        nameserver1: nameserver1
        domain: domain
        netwait_enabled: true
        id: 0
      properties:
        id:
          type: integer
        hostname:
          type: string
        domain:
          type: string
        ipv4gateway:
          type: string
        ipv6gateway:
          type: string
        nameserver1:
          type: string
        nameserver2:
          type: string
        nameserver3:
          type: string
        httpproxy:
          type: string
        netwait_enabled:
          type: boolean
        netwait_ip:
          items:
            type: string
          type: array
        hosts:
          type: string
        domains:
          items:
            type: string
          type: array
        service_announcement:
          $ref: '#/components/schemas/NetworkConfig_service_announcement'
        hostname_local:
          type: string
      type: object
    NetworkSummary:
      example:
        nameservers:
        - nameservers
        - nameservers
        ips:
          key:
            IPV6:
            - IPV6
            - IPV6
            IPV4:
            - IPV4
            - IPV4
        default_routes:
        - default_routes
        - default_routes
      properties:
        ips:
          additionalProperties:
            $ref: '#/components/schemas/NetworkSummary_ips_value'
          type: object
        default_routes:
          items:
            type: string
          type: array
        nameservers:
          items:
            type: string
          type: array
      type: object
    PoolsResponse:
      items:
        $ref: '#/components/schemas/Pool'
      type: array
    Pool:
      example:
        path: path
        healthy: true
        encryptkey_path: encryptkey_path
        name: name
        guid: guid
        id: 0
        is_decrypted: true
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        guid:
          type: string
        path:
          type: string
        status:
          type: string
        healthy:
          type: boolean
        is_decrypted:
          type: boolean
        encryptkey_path:
          type: string
      required:
      - id
      - name
      - path
      type: object
    Service:
      example:
        service: service
        enable: true
        id: 0
        state: state
        pids:
        - 6
        - 6
      properties:
        id:
          type: integer
        service:
          type: string
        enable:
          type: boolean
        state:
          type: string
        pids:
          items:
            type: integer
          type: array
      required:
      - id
      - service
      type: object
    ShareNFS:
      example:
        maproot_group: maproot_group
        hosts:
        - hosts
        - hosts
        maproot_user: maproot_user
        networks:
        - networks
        - networks
        enabled: true
        alldirs: true
        mapall_user: mapall_user
        mapall_group: mapall_group
        security:
        - security
        - security
        paths:
        - paths
        - paths
        comment: comment
        id: 0
        quiet: true
        locked: true
        ro: true
      properties:
        id:
          type: integer
        comment:
          type: string
        hosts:
          items:
            type: string
          type: array
        alldirs:
          type: boolean
        ro:
          type: boolean
        quiet:
          type: boolean
        maproot_user:
          type: string
        maproot_group:
          type: string
        mapall_user:
          type: string
        mapall_group:
          type: string
        security:
          items:
            type: string
          type: array
        enabled:
          type: boolean
        locked:
          type: boolean
        paths:
          items:
            type: string
          type: array
        networks:
          items:
            type: string
          type: array
      required:
      - id
      - paths
      type: object
    ShareSMB:
      example:
        auxsmbconf: auxsmbconf
        purpose: purpose
        hostsdeny:
        - hostsdeny
        - hostsdeny
        path_suffix: path_suffix
        browsable: true
        aapl_name_mangling: true
        acl: true
        enabled: true
        durablehandle: true
        path: path
        id: 0
        locked: true
        hostsallow:
        - hostsallow
        - hostsallow
        shadowcopy: true
        abe: true
        streams: true
        fsrvp: true
        vuid: vuid
        home: true
        timemachine: true
        name: name
        comment: comment
        guestok: true
        ro: true
        recyclebin: true
      properties:
        id:
          type: integer
        path:
          type: string
        path_suffix:
          type: string
        purpose:
          type: string
        home:
          type: boolean
        timemachine:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        recyclebin:
          type: boolean
        shadowcopy:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
        locked:
          type: boolean
        vuid:
          type: string
      required:
      - id
      - path
      type: object
    SharesNFSResponse:
      items:
        $ref: '#/components/schemas/ShareNFS'
      type: array
    SharesSMBResponse:
      items:
        $ref: '#/components/schemas/ShareSMB'
      type: array
    VM:
      example:
        memory: 1
        devices:
        - vm: 3
          dtype: dtype
          attributes: "{}"
          id: 7
          order: 9
        - vm: 3
          dtype: dtype
          attributes: "{}"
          id: 7
          order: 9
        shutdown_timeout: 2
        description: description
        threads: 5
        vcpus: 6
        autostart: true
        cores: 5
        bootloader: bootloader
        name: name
        id: 0
        time: time
        status:
          domain_state: domain_state
          pid: 2
          state: state
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        vcpus:
          type: integer
        memory:
          type: integer
        autostart:
          type: boolean
        time:
          type: string
        bootloader:
          type: string
        cores:
          type: integer
        threads:
          type: integer
        shutdown_timeout:
          type: integer
        devices:
          items:
            $ref: '#/components/schemas/VM_devices_inner'
          type: array
        status:
          $ref: '#/components/schemas/VM_status'
      required:
      - id
      - name
      type: object
    VMSResponse:
      items:
        $ref: '#/components/schemas/VM'
      type: array
    CreateDatasetParams_encryption_options:
      example:
        generate_key: true
        passphrase: passphrase
        key: key
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        generate_key:
          type: boolean
        passphrase:
          type: string
        key:
          type: string
      type: object
    NetworkConfig_service_announcement:
      example:
        wsd: true
        netbios: true
        mdns: true
      properties:
        netbios:
          type: boolean
        mdns:
          type: boolean
        wsd:
          type: boolean
      type: object
    NetworkSummary_ips_value:
      example:
        IPV6:
        - IPV6
        - IPV6
        IPV4:
        - IPV4
        - IPV4
      properties:
        IPV4:
          items:
            type: string
          type: array
        IPV6:
          items:
            type: string
          type: array
      type: object
    VM_devices_inner:
      example:
        vm: 3
        dtype: dtype
        attributes: "{}"
        id: 7
        order: 9
      properties:
        id:
          type: integer
        dtype:
          type: string
        order:
          type: integer
        vm:
          type: integer
        attributes:
          type: object
      required:
      - dtype
      - id
      type: object
    VM_status:
      example:
        domain_state: domain_state
        pid: 2
        state: state
      properties:
        state:
          type: string
        pid:
          type: integer
        domain_state:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: APIKey
      scheme: bearer
      type: http
