/*
TrueNAS RESTful API

Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// ISCSIExtentDeleteParams struct for ISCSIExtentDeleteParams
type ISCSIExtentDeleteParams struct {
	Remove bool `json:"remove"`
	Force bool `json:"force"`
}

// NewISCSIExtentDeleteParams instantiates a new ISCSIExtentDeleteParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewISCSIExtentDeleteParams(remove bool, force bool) *ISCSIExtentDeleteParams {
	this := ISCSIExtentDeleteParams{}
	this.Remove = remove
	this.Force = force
	return &this
}

// NewISCSIExtentDeleteParamsWithDefaults instantiates a new ISCSIExtentDeleteParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewISCSIExtentDeleteParamsWithDefaults() *ISCSIExtentDeleteParams {
	this := ISCSIExtentDeleteParams{}
	return &this
}

// GetRemove returns the Remove field value
func (o *ISCSIExtentDeleteParams) GetRemove() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Remove
}

// GetRemoveOk returns a tuple with the Remove field value
// and a boolean to check if the value has been set.
func (o *ISCSIExtentDeleteParams) GetRemoveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Remove, true
}

// SetRemove sets field value
func (o *ISCSIExtentDeleteParams) SetRemove(v bool) {
	o.Remove = v
}

// GetForce returns the Force field value
func (o *ISCSIExtentDeleteParams) GetForce() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Force
}

// GetForceOk returns a tuple with the Force field value
// and a boolean to check if the value has been set.
func (o *ISCSIExtentDeleteParams) GetForceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Force, true
}

// SetForce sets field value
func (o *ISCSIExtentDeleteParams) SetForce(v bool) {
	o.Force = v
}

func (o ISCSIExtentDeleteParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["remove"] = o.Remove
	}
	if true {
		toSerialize["force"] = o.Force
	}
	return json.Marshal(toSerialize)
}

type NullableISCSIExtentDeleteParams struct {
	value *ISCSIExtentDeleteParams
	isSet bool
}

func (v NullableISCSIExtentDeleteParams) Get() *ISCSIExtentDeleteParams {
	return v.value
}

func (v *NullableISCSIExtentDeleteParams) Set(val *ISCSIExtentDeleteParams) {
	v.value = val
	v.isSet = true
}

func (v NullableISCSIExtentDeleteParams) IsSet() bool {
	return v.isSet
}

func (v *NullableISCSIExtentDeleteParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableISCSIExtentDeleteParams(val *ISCSIExtentDeleteParams) *NullableISCSIExtentDeleteParams {
	return &NullableISCSIExtentDeleteParams{value: val, isSet: true}
}

func (v NullableISCSIExtentDeleteParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableISCSIExtentDeleteParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


