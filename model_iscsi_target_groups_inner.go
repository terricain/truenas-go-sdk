/*
TrueNAS RESTful API

Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// ISCSITargetGroupsInner struct for ISCSITargetGroupsInner
type ISCSITargetGroupsInner struct {
	Portal *int32 `json:"portal,omitempty"`
	Initiator *int32 `json:"initiator,omitempty"`
	Auth map[string]interface{} `json:"auth,omitempty"`
	Authmethod *string `json:"authmethod,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ISCSITargetGroupsInner ISCSITargetGroupsInner

// NewISCSITargetGroupsInner instantiates a new ISCSITargetGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewISCSITargetGroupsInner() *ISCSITargetGroupsInner {
	this := ISCSITargetGroupsInner{}
	return &this
}

// NewISCSITargetGroupsInnerWithDefaults instantiates a new ISCSITargetGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewISCSITargetGroupsInnerWithDefaults() *ISCSITargetGroupsInner {
	this := ISCSITargetGroupsInner{}
	return &this
}

// GetPortal returns the Portal field value if set, zero value otherwise.
func (o *ISCSITargetGroupsInner) GetPortal() int32 {
	if o == nil || o.Portal == nil {
		var ret int32
		return ret
	}
	return *o.Portal
}

// GetPortalOk returns a tuple with the Portal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ISCSITargetGroupsInner) GetPortalOk() (*int32, bool) {
	if o == nil || o.Portal == nil {
		return nil, false
	}
	return o.Portal, true
}

// HasPortal returns a boolean if a field has been set.
func (o *ISCSITargetGroupsInner) HasPortal() bool {
	if o != nil && o.Portal != nil {
		return true
	}

	return false
}

// SetPortal gets a reference to the given int32 and assigns it to the Portal field.
func (o *ISCSITargetGroupsInner) SetPortal(v int32) {
	o.Portal = &v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *ISCSITargetGroupsInner) GetInitiator() int32 {
	if o == nil || o.Initiator == nil {
		var ret int32
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ISCSITargetGroupsInner) GetInitiatorOk() (*int32, bool) {
	if o == nil || o.Initiator == nil {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *ISCSITargetGroupsInner) HasInitiator() bool {
	if o != nil && o.Initiator != nil {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given int32 and assigns it to the Initiator field.
func (o *ISCSITargetGroupsInner) SetInitiator(v int32) {
	o.Initiator = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *ISCSITargetGroupsInner) GetAuth() map[string]interface{} {
	if o == nil || o.Auth == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ISCSITargetGroupsInner) GetAuthOk() (map[string]interface{}, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *ISCSITargetGroupsInner) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given map[string]interface{} and assigns it to the Auth field.
func (o *ISCSITargetGroupsInner) SetAuth(v map[string]interface{}) {
	o.Auth = v
}

// GetAuthmethod returns the Authmethod field value if set, zero value otherwise.
func (o *ISCSITargetGroupsInner) GetAuthmethod() string {
	if o == nil || o.Authmethod == nil {
		var ret string
		return ret
	}
	return *o.Authmethod
}

// GetAuthmethodOk returns a tuple with the Authmethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ISCSITargetGroupsInner) GetAuthmethodOk() (*string, bool) {
	if o == nil || o.Authmethod == nil {
		return nil, false
	}
	return o.Authmethod, true
}

// HasAuthmethod returns a boolean if a field has been set.
func (o *ISCSITargetGroupsInner) HasAuthmethod() bool {
	if o != nil && o.Authmethod != nil {
		return true
	}

	return false
}

// SetAuthmethod gets a reference to the given string and assigns it to the Authmethod field.
func (o *ISCSITargetGroupsInner) SetAuthmethod(v string) {
	o.Authmethod = &v
}

func (o ISCSITargetGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Portal != nil {
		toSerialize["portal"] = o.Portal
	}
	if o.Initiator != nil {
		toSerialize["initiator"] = o.Initiator
	}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	if o.Authmethod != nil {
		toSerialize["authmethod"] = o.Authmethod
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ISCSITargetGroupsInner) UnmarshalJSON(bytes []byte) (err error) {
	varISCSITargetGroupsInner := _ISCSITargetGroupsInner{}

	if err = json.Unmarshal(bytes, &varISCSITargetGroupsInner); err == nil {
		*o = ISCSITargetGroupsInner(varISCSITargetGroupsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "portal")
		delete(additionalProperties, "initiator")
		delete(additionalProperties, "auth")
		delete(additionalProperties, "authmethod")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableISCSITargetGroupsInner struct {
	value *ISCSITargetGroupsInner
	isSet bool
}

func (v NullableISCSITargetGroupsInner) Get() *ISCSITargetGroupsInner {
	return v.value
}

func (v *NullableISCSITargetGroupsInner) Set(val *ISCSITargetGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableISCSITargetGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableISCSITargetGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableISCSITargetGroupsInner(val *ISCSITargetGroupsInner) *NullableISCSITargetGroupsInner {
	return &NullableISCSITargetGroupsInner{value: val, isSet: true}
}

func (v NullableISCSITargetGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableISCSITargetGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


