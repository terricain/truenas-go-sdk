/*
TrueNAS RESTful API

Testing IscsiExtentAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package truenas

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/terrycain/truenas-go-sdk/pkg/truenas"
)

func Test_truenas_IscsiExtentAPIService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IscsiExtentAPIService CreateISCSIExtent", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.IscsiExtentAPI.CreateISCSIExtent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test IscsiExtentAPIService DeleteISCSIExtent", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.IscsiExtentAPI.DeleteISCSIExtent(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test IscsiExtentAPIService GetISCSIExtent", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.IscsiExtentAPI.GetISCSIExtent(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test IscsiExtentAPIService ListISCSIExtent", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.IscsiExtentAPI.ListISCSIExtent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}
